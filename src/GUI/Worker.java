package GUI;

import DataSrc.DataStructures.DoublyLinkedList;
import DataSrc.DataStructures.LinkedList;
import DataSrc.DataStructures.Node2B2;
import DataSrc.Ruta;
import DataSrc.User;
import Logic.DataManipulation;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author Rubén Darío Martínez
 */
public class Worker extends javax.swing.JFrame {

    /**
     * Creates new form Worker
     */
    
    User conductor;
    Ruta rutaActual;
    Node2B2 identificador;
    boolean EnFuncionamiento;
    
    
    private Timer t;
    private int h, m, s, cs;
    private ActionListener acciones = new ActionListener(){
    
        @Override
        public void actionPerformed(ActionEvent ae) {
            ++s;
            if(s==60) 
            {
                s = 0;
                ++m;
            }
            if(m==60)
            {
                m = 0;
                ++h;
            }
            actualizarLabel();
        }

    };
     

        private void actualizarLabel() {
           String tiempo = (h<=9?"0":"")+h+":"+(m<=9?"0":"")+m+":"+(s<=9?"0":"")+s;
            TiempoTranscurrido.setText(tiempo);
        }
        

            
            
    public Worker(User usuarioActivo) {
        initComponents();
        this.setLocationRelativeTo(Back);
        transparenciaButton();
        t = new Timer(1000,acciones);
        this.conductor = usuarioActivo;
    }
    
    public void transparenciaButton(){
        Config.setOpaque(false);
        Config.setContentAreaFilled(false);
        Config.setBorderPainted(false);
        
        Back.setOpaque(false);
        Back.setContentAreaFilled(false);
        Back.setBorderPainted(false);
        
        Cambiar.setOpaque(false);
        Cambiar.setContentAreaFilled(false);
        Cambiar.setBorderPainted(false);
        
        Iniciar.setOpaque(false);
        Iniciar.setContentAreaFilled(false);
        Iniciar.setBorderPainted(false);
        
        Config.setOpaque(false);
        Config.setContentAreaFilled(false);
        Config.setBorderPainted(false);
        
        Back.setOpaque(false);
        Back.setContentAreaFilled(false);
        Back.setBorderPainted(false);
        
        Terminar.setOpaque(false);
        Terminar.setContentAreaFilled(false);
        Terminar.setBorderPainted(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProximaEstacion = new javax.swing.JLabel();
        NumeroPasajeros = new javax.swing.JLabel();
        TiempoTranscurrido = new javax.swing.JLabel();
        NombreRutaView = new javax.swing.JLabel();
        NombreRuta = new javax.swing.JTextField();
        Terminar = new javax.swing.JButton();
        Cambiar = new javax.swing.JButton();
        Iniciar = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        Config = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ProximaEstacion.setFont(new java.awt.Font("Rubik", 1, 14)); // NOI18N
        ProximaEstacion.setText("No asignada.");
        getContentPane().add(ProximaEstacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 740, 250, 30));

        NumeroPasajeros.setFont(new java.awt.Font("Rubik", 1, 14)); // NOI18N
        NumeroPasajeros.setForeground(new java.awt.Color(153, 153, 153));
        NumeroPasajeros.setText("0");
        getContentPane().add(NumeroPasajeros, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 230, -1, 20));

        TiempoTranscurrido.setFont(new java.awt.Font("Rubik", 1, 14)); // NOI18N
        TiempoTranscurrido.setForeground(new java.awt.Color(153, 153, 153));
        TiempoTranscurrido.setText("00:00:00");
        getContentPane().add(TiempoTranscurrido, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, -1, -1));

        NombreRutaView.setFont(new java.awt.Font("Rubik", 1, 48)); // NOI18N
        NombreRutaView.setText("---");
        getContentPane().add(NombreRutaView, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 400, 110, 80));

        NombreRuta.setFont(new java.awt.Font("Rubik", 1, 18)); // NOI18N
        NombreRuta.setForeground(new java.awt.Color(61, 61, 61));
        NombreRuta.setToolTipText("User");
        NombreRuta.setBorder(null);
        NombreRuta.setSelectedTextColor(new java.awt.Color(87, 81, 81));
        NombreRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreRutaActionPerformed(evt);
            }
        });
        getContentPane().add(NombreRuta, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 430, 70, 30));

        Terminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Terminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TerminarActionPerformed(evt);
            }
        });
        getContentPane().add(Terminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 550, 130, 50));

        Cambiar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Cambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CambiarActionPerformed(evt);
            }
        });
        getContentPane().add(Cambiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 420, 130, 50));

        Iniciar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IniciarActionPerformed(evt);
            }
        });
        getContentPane().add(Iniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 280, 90, 50));

        Back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });
        getContentPane().add(Back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 50, 50));

        Config.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Config.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfigActionPerformed(evt);
            }
        });
        getContentPane().add(Config, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 10, 50, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/src_images/Worker_1.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NombreRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreRutaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreRutaActionPerformed

    private void TerminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TerminarActionPerformed
        if(EnFuncionamiento){
            DoublyLinkedList<Ruta> rutasInfo = DataManipulation.realTimeInfo.get(NombreRutaView.getText());
            if(rutasInfo.getHead().equals(identificador)){
                rutasInfo.popFront();
                JOptionPane.showMessageDialog(null, "Ruta Terminada con exito! Gracias.");
                t.stop();
                resetTimer();
                EnFuncionamiento = false;
            }else if(rutasInfo.getTail().equals(identificador)){
                rutasInfo.popBack();
                JOptionPane.showMessageDialog(null, "Ruta Terminada con exito! Gracias.");
                t.stop();
                resetTimer();
                EnFuncionamiento = false;
            }else{
                JOptionPane.showMessageDialog(null, "No puedes terminar la ruta, no eres el primer bus o el ultimo");
            }
        }else{
        JOptionPane.showMessageDialog(null, "Inicia una ruta primero...");
        }
    }//GEN-LAST:event_TerminarActionPerformed

    private void CambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CambiarActionPerformed
        // TODO add your handling code here:
        if(EnFuncionamiento){
         JOptionPane.showMessageDialog(null,"Termina la ruta actual para poder cambiarla.");   
        }else {
        if(DataManipulation.listaRutasHM.containsKey(NombreRuta.getText())){
            NombreRutaView.setText(NombreRuta.getText());
        }else {
            JOptionPane.showMessageDialog(null, "Ruta Inexistente, coloque una ruta correcta");
        }
        }
    }//GEN-LAST:event_CambiarActionPerformed

    private void IniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IniciarActionPerformed
        // TODO add your handling code here:
        
        if(EnFuncionamiento){
            JOptionPane.showMessageDialog(null,"Ruta en progreso... Terminar si desea iniciar otra.");
        } else if(NombreRutaView.getText().equals("---")){
            JOptionPane.showMessageDialog(null, "Coloque una ruta valida antes de comenzar");
        }else if(DataManipulation.realTimeInfo.containsKey(NombreRutaView.getText())){ 
            
            rutaActual = new Ruta(NombreRutaView.getText(),conductor,20502,50218,1);
            identificador = new Node2B2(rutaActual);
            rutaActual.setRealTimeInfo(identificador);
            
            DoublyLinkedList<Ruta> realtime= DataManipulation.realTimeInfo.get(NombreRutaView.getText());           
            realtime.PushBack(rutaActual.getRealTimeInfo());
            EnFuncionamiento = true;
            t.start();
        } else {
            
            DataManipulation.realTimeInfo.put(NombreRutaView.getText(), new DoublyLinkedList<>());
            //Agrega la listaEnlazada a el HashMap
            rutaActual = new Ruta(NombreRutaView.getText(),conductor,20502,50218,1);
            identificador = new Node2B2(rutaActual);
            rutaActual.setRealTimeInfo(identificador);
            
            DoublyLinkedList<Ruta> realtime= DataManipulation.realTimeInfo.get(NombreRutaView.getText());
            realtime.PushBack(rutaActual.getRealTimeInfo());
            EnFuncionamiento = true;
            t.start();
        }
    }//GEN-LAST:event_IniciarActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        new Login().setVisible(true);
        pack();
    }//GEN-LAST:event_BackActionPerformed

    private void ConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfigActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConfigActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Worker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Worker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Worker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Worker.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Worker(new User()).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton Cambiar;
    private javax.swing.JButton Config;
    private javax.swing.JButton Iniciar;
    private javax.swing.JTextField NombreRuta;
    private javax.swing.JLabel NombreRutaView;
    private javax.swing.JLabel NumeroPasajeros;
    private javax.swing.JLabel ProximaEstacion;
    private javax.swing.JButton Terminar;
    private javax.swing.JLabel TiempoTranscurrido;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    private void resetTimer() {
        h = 0;
        s = 0;
        m = 0;
        TiempoTranscurrido.setText("00:00:00");
    }
}
